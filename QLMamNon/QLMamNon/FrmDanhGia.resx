<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbHinh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>